local camera_model = require "libraries/orthographic.camera"
local input = require ("libraries/mobile_input/input")
local cursor_model = require("main/code/cursor")

local main_camera = hash("/camera")
local cursor = hash("/cursor")
local cursor_sprite = "/cursor#sprite"

local cursor_previous_position = vmath.vector3()


local function turn_off_free_mode()
   cursor_model.free_cursor_mode = false
   sprite.play_flipbook(cursor_sprite, hash("empty"))
   defos.set_cursor_visible(true)
end

local function turn_on_free_mode()
   cursor_model.free_cursor_mode = true
   sprite.play_flipbook(cursor_sprite, hash("tile_selection"))
   defos.set_cursor_visible(false)
end


function init(self)
   msg.post(".", "acquire_input_focus")
   turn_on_free_mode()
   defos.set_cursor_locked(false)
   self.cursors = {
		defos.CURSOR_HAND,
		defos.CURSOR_ARROW,
		defos.CURSOR_CROSSHAIR,
		defos.CURSOR_IBEAM,
	}
end

function update(self, dt)
   if cursor_model.free_cursor_mode then 
      local cursor_position = input.get_cursor_world_position()
      go.set_position(cursor_position, cursor)
   end
end

local function grab_mode(self, action_id, action)
   if action_id == hash("key_space") and action.pressed then
      cursor_previous_position = input.get_cursor_position()
      defos.set_cursor(self.cursors[1])
      turn_off_free_mode()
   end
   if action_id == hash("key_space") and input.get_touch_status() then
      defos.set_cursor(self.cursors[3])
      camera_model.follow(main_camera, cursor, {lepr = 0.4, horizontal = true, vertical = true, immediate = true})
      local cursor_object = go.get_position(cursor) 
      local cursor_position = input.get_cursor_position()
      local delta = cursor_position - cursor_previous_position
      go.set_position(cursor_object - delta, cursor)
      cursor_previous_position = input.get_cursor_position()
   end
   if action_id == hash("key_space") and action.released then
      turn_on_free_mode()
      camera_model.unfollow(main_camera)
   end
end

function on_input(self, action_id, action)
   grab_mode(self, action_id, action)
end